# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-test-install-deploy:
    docker:
      # specify the version you desire here
      - image: cimg/node:16.15.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/project/myscreen/api-backend

    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y rsync curl wget make g++ python build-essential libxi-dev libglu1-mesa-dev libglew-dev libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - checkout
      - run: chmod +x ~/project/myscreen/api-backend/.circleci/*.sh
      - run: ~/project/myscreen/api-backend/.circleci/notify.sh "start"
      - run: export CXXFLAGS='-include /usr/include/c++/11/limits'
      - add_ssh_keys:
          fingerprints:
            - '1e:a7:8f:cf:dc:3c:db:82:1f:f7:2e:22:bc:4a:29:d4'

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - run: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # run tests!
      - run: yarn lint
      # - run: yarn test

      # build
      - run: yarn build

      # rm -rf
      - run: rm -rf node_modules/

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-install-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - run: yarn install --production=true --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-install-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - deploy:
          command: ~/project/myscreen/api-backend/.circleci/deploy.sh
      - run:
          when: on_success
          command: ~/project/myscreen/api-backend/.circleci/notify.sh "end"
      - run:
          when: on_fail
          command: ~/project/myscreen/api-backend/.circleci/notify.sh "fail"

workflows:
  version: 2
  build-test-install-deploy-test:
    jobs:
      - build-test-install-deploy:
          context: myscreen-dev
#          filters:
#            branches:
#              only:
#                - master
